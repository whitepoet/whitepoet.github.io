<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>up up and away</title>
  
  <subtitle>小白的博客</subtitle>
  <link href="https://whitepoet.com/atom.xml" rel="self"/>
  
  <link href="https://whitepoet.com/"/>
  <updated>2020-10-21T08:54:21.765Z</updated>
  <id>https://whitepoet.com/</id>
  
  <author>
    <name>whitepoet</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>qnap_nas_releated</title>
    <link href="https://whitepoet.com/qnap-nas-releated/"/>
    <id>https://whitepoet.com/qnap-nas-releated/</id>
    <published>2020-10-21T08:50:28.000Z</published>
    <updated>2020-10-21T08:54:21.765Z</updated>
    
    <content type="html"><![CDATA[<p>和qnap nas相关的一些记录,会一直更新。</p><p>qnap nas设备的os应该是arm架构的</p><h2 id="1-固件解包"><a href="#1-固件解包" class="headerlink" title="1. 固件解包"></a>1. 固件解包</h2><p>Qnap nas固件的解包用binwalk无法成功，Fireware Mod Kit我不怎么用，所以也没去尝试。经过调研发现其固件都是经过加密的，密钥都是“QNAPNASVERSION4”，所以可以利用公开的一些工具进行解压，可以看后面的参考1-5.</p><p>PC1和PC2这两个程序是nas os里面使用的解密/加密脚本，参考5就是PC1的pthon3实现，参考1的工具也需要PC1这个程序。</p><p>解密的命令大致类似</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> PC1 d  QNAPNASVERSION4 source.img dest.tar.gz</span></span><br></pre></td></tr></table></figure><p>命令执行完就是解压下压缩包就是包的内容了</p><p>我测试的时候只用了PC1（从nas设备里面拷贝出的，不是我编译参考2出来的，编译可能要在arm环境下）和python的脚本，这两个解出来的是一样的。</p><p>参考中的部分脚本我也放到了自己的github中，在some_iot里面，欢迎star。</p><h2 id="2-设备挂载U盘"><a href="#2-设备挂载U盘" class="headerlink" title="2. 设备挂载U盘"></a>2. 设备挂载U盘</h2><p>查看U盘信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fdisk -l</span></span><br></pre></td></tr></table></figure><p>这时候最后会出现你插入U盘的信息，差不多是下面图这样。</p><p><img src="/qnap-nas-releated/1.png" alt="usb_info"></p><p>挂载U盘, sdb1根据实际情况修改，mmc_sd文件夹提示没有的话可以用mkdir创建一个，qnap的os里面支持的unix命令还是挺多的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mount -t vfat /dev/sdb1 /mnt/mmc_sd/</span></span><br></pre></td></tr></table></figure><p>然后后面进到mmc_sd文件夹里面就可以看到U盘的文件了。</p><p>卸载U盘，执行命令时要推出当前目录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt/mmc_sd</span><br></pre></td></tr></table></figure><p>如果无法卸载的话看一看相关的进程然后kill掉就可以了</p><p>挂载U盘有一个好处就是可以copy系统里的文件拿出来分析，也可以执行系统里的命令处理U盘里的文件，比如PC1命令。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://github.com/max-boehm/qnap-utils">公开工具qnap-utils</a></li><li><a href="https://sites.google.com/site/nliaudat/nas/test2/qnap401t-decryptencryptfirmware">PC1 &amp;&amp; PC2源码分享</a></li><li><a href="https://island123.github.io/2019/03/14/2019-03-14-QNAP%E5%9B%BA%E4%BB%B6%E8%A7%A3%E5%8E%8B%E5%8F%8A%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E8%BE%85%E5%8A%A9%E8%84%9A%E6%9C%AC/#%E5%9B%BA%E4%BB%B6%E8%A7%A3%E5%8E%8B">qnap解包和辅助脚本</a></li><li><a href="https://github.com/qnap-dev/qdk2">一个比较复杂的解包程序</a></li><li>[python解包脚本](</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;和qnap nas相关的一些记录,会一直更新。&lt;/p&gt;
&lt;p&gt;qnap nas设备的os应该是arm架构的&lt;/p&gt;
&lt;h2 id=&quot;1-固件解包&quot;&gt;&lt;a href=&quot;#1-固件解包&quot; class=&quot;headerlink&quot; title=&quot;1. 固件解包&quot;&gt;&lt;/a&gt;1. 固件解</summary>
      
    
    
    
    <category term="iot" scheme="https://whitepoet.com/categories/iot/"/>
    
    
    <category term="nas" scheme="https://whitepoet.com/tags/nas/"/>
    
  </entry>
  
  <entry>
    <title>cve-2017-14429复现</title>
    <link href="https://whitepoet.com/cve-2017-14429%E5%A4%8D%E7%8E%B0/"/>
    <id>https://whitepoet.com/cve-2017-14429%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-10-14T13:23:14.000Z</published>
    <updated>2020-10-19T09:21:51.021Z</updated>
    
    <content type="html"><![CDATA[<p>漏洞复现</p><h2 id="漏洞编号"><a href="#漏洞编号" class="headerlink" title="漏洞编号"></a>漏洞编号</h2><p>cve-2017-14429</p><h2 id="漏洞效果"><a href="#漏洞效果" class="headerlink" title="漏洞效果"></a>漏洞效果</h2><p>可以以root用户的身份执行代码</p><h2 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h2><ul><li>D-Link Dir-850l Firmware Fw114wwb07 H2ab Beta1</li><li>D-Link Dir-850l Firmware Fw208wwb02</li></ul><h2 id="漏洞复现过程"><a href="#漏洞复现过程" class="headerlink" title="漏洞复现过程"></a>漏洞复现过程</h2><h3 id="telnet-backdoor"><a href="#telnet-backdoor" class="headerlink" title="telnet backdoor"></a>telnet backdoor</h3><p>login：Alphanetworks;wrgac25_dlink.2013gui_dir850l</p><h3 id="复现简述"><a href="#复现简述" class="headerlink" title="复现简述"></a>复现简述</h3><p>cvedetails上面提供的影响版本是这两个，但是漏洞发现作者说只影响revb版本的，由于a版本的我也没有做实验，不太确定是否影响。</p><p>该漏洞的利用过程是配置一个dhcpd的环境，router作为客户端连接主机并向主机请求ip地址从而实现利用。</p><h3 id="dhcpd环境配置"><a href="#dhcpd环境配置" class="headerlink" title="dhcpd环境配置"></a>dhcpd环境配置</h3><p>安装dhcp服务器</p><p>sudo apt install isc-dhcp-serve</p><p>sudo cat /etc/dhcp/dhcpd.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">option domain-name &quot;;reboot;&quot;;</span><br><span class="line">option domain-name-servers 8.8.8.8, 8.8.4.4;</span><br><span class="line">default-lease-time 600;</span><br><span class="line">max-lease-time 7200;</span><br><span class="line">ddns-update-style none;</span><br><span class="line">subnet 10.254.239.0 netmask 255.255.255.224 &#123;</span><br><span class="line">  range 10.254.239.10 10.254.239.20;</span><br><span class="line">  option routers 10.254.239.1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里分配的ip地址要和网卡的ip相对应，而且要设成静态ip。</p><p>启动dhcpd:</p><p>​    sudo dhcpd -4 -f</p><p>如果报错无法加载dhcpd.leases,执行以下命令：</p><p>​    sudo rm -f /var/lib/dhcp/dhcpd.leases</p><p>​    sudo touch /var/lib/dhcp/dhcpd.leases</p><h3 id="路由器连接设置"><a href="#路由器连接设置" class="headerlink" title="路由器连接设置"></a>路由器连接设置</h3><p>需要进路由器页面设置为dhcp获取ip,然后将wan口和主机连接，连接的网卡是之前设置静态ip的网卡。</p><h3 id="初步结果"><a href="#初步结果" class="headerlink" title="初步结果"></a>初步结果</h3><p>可以观察到路由器在启动后，两个指示灯都会变成黄灯，随即路由器开始重启，第一个变成黄色，第二个熄灭，表示重启过程。然后这个过程会一直重复。下图是用wireshark抓包的整个过程。</p><p><img src="/cve-2017-14429%E5%A4%8D%E7%8E%B0/1.png" alt="wireshark抓包"></p><h2 id="后续利用分析"><a href="#后续利用分析" class="headerlink" title="后续利用分析"></a>后续利用分析</h2><p>漏洞的作者在博客中的利用是通过路由器的wget上传一个telnet服务器，可以从wan口进行telnet连接。由于无法实现可以在router系统上执行的程序，所以寻找其他的办法。</p><p>路由器上存在着一个telnet的后门，但是只有路由器reset后才能启用这个后门，之后如果路由器重启的话就消失了。</p><p>如果按照启用这个后门的脚本重新写一个传进路由器的系统中执行，是不是可以重新开启这个后门。但是所编译后的程序都无法在系统中执行，报错为ELF：not found。</p><h2 id="附录1-b类型固件解密代码"><a href="#附录1-b类型固件解密代码" class="headerlink" title="附录1  b类型固件解密代码"></a>附录1  b类型固件解密代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * Simple tool to decrypt D-LINK DIR-850L REVB firmwares </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * $ gcc -o revbdec revbdec.c</span></span><br><span class="line"><span class="comment"> * $ ./revbdec DIR850L_REVB_FW207WWb05_h1ke_beta1.bin wrgac25_dlink.2013gui_dir850l &gt; DIR850L_REVB_FW207WWb05_h1ke_beta1.decrypted</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USAGE <span class="meta-string">&quot;Usage: decimg &lt;filename&gt; &lt;key&gt;\n&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span>    argc,</span></span></span><br><span class="line"><span class="function"><span class="params">         <span class="keyword">char</span>   **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>     i, fi;</span><br><span class="line">        <span class="keyword">int</span>     fo = STDOUT_FILENO, fe = STDERR_FILENO;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                write(fe, USAGE, <span class="built_in">strlen</span>(USAGE));</span><br><span class="line">                <span class="keyword">return</span> (EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((fi = open(argv[<span class="number">1</span>], O_RDONLY)) == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                perror(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">                write(fe, USAGE, <span class="built_in">strlen</span>(USAGE));</span><br><span class="line">                <span class="keyword">return</span> (EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *key = argv[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> kl = <span class="built_in">strlen</span>(key);</span><br><span class="line"></span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">char</span> buffer[<span class="number">4096</span>];</span><br><span class="line">                <span class="keyword">int</span> j, len;</span><br><span class="line">                len = read(fi, buffer, <span class="number">4096</span>);</span><br><span class="line">                <span class="keyword">if</span> (len &lt;= <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len; j++) &#123;</span><br><span class="line">                        buffer[j] ^= (i + j) % <span class="number">0xFB</span> + <span class="number">1</span>;</span><br><span class="line">                        buffer[j] ^= key[(i + j) % kl];</span><br><span class="line">                &#125;</span><br><span class="line">                write(fo, buffer, len);</span><br><span class="line">                i += len;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> (EXIT_SUCCESS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="附录2-dlink固件下载地址"><a href="#附录2-dlink固件下载地址" class="headerlink" title="附录2 dlink固件下载地址"></a>附录2 dlink固件下载地址</h2><ol><li><a href="http://files.dlink.com.au/products/">http://files.dlink.com.au/products/</a></li><li><a href="ftp://ftp2.dlink.com/">ftp://ftp2.dlink.com/</a></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><p><a href="https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html#pre-auth-root-rces">https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html#pre-auth-root-rces</a></p></li><li><p><a href="https://pierrekim.github.io/blog/2017-09-21-update-dlink-850l-mydlink-cloud-0days-vulnerabilities.html">https://pierrekim.github.io/blog/2017-09-21-update-dlink-850l-mydlink-cloud-0days-vulnerabilities.html</a></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;漏洞复现&lt;/p&gt;
&lt;h2 id=&quot;漏洞编号&quot;&gt;&lt;a href=&quot;#漏洞编号&quot; class=&quot;headerlink&quot; title=&quot;漏洞编号&quot;&gt;&lt;/a&gt;漏洞编号&lt;/h2&gt;&lt;p&gt;cve-2017-14429&lt;/p&gt;
&lt;h2 id=&quot;漏洞效果&quot;&gt;&lt;a href=&quot;#漏洞效果&quot; c</summary>
      
    
    
    
    <category term="漏洞复现" scheme="https://whitepoet.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="dlink" scheme="https://whitepoet.com/tags/dlink/"/>
    
    <category term="dhcp_ld" scheme="https://whitepoet.com/tags/dhcp-ld/"/>
    
  </entry>
  
  <entry>
    <title>cisco_dhcp_configure</title>
    <link href="https://whitepoet.com/cisco-dhcp-configure/"/>
    <id>https://whitepoet.com/cisco-dhcp-configure/</id>
    <published>2020-10-14T12:09:08.000Z</published>
    <updated>2020-10-14T13:36:02.592Z</updated>
    
    <content type="html"><![CDATA[<p>cisco_dhcp server配置</p><h2 id="1-Dhcp-server开启"><a href="#1-Dhcp-server开启" class="headerlink" title="1. Dhcp server开启"></a>1. Dhcp server开启</h2><p>​    </p><figure class="highlight plain"><figcaption><span>shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cisco&gt; enable</span><br><span class="line">cisco# configure terminal</span><br><span class="line">cisco(config)# service dhcp</span><br><span class="line">cisco(config)# ip dhcp pool cisco</span><br><span class="line">cisco(config)# network 192.168.1.0 255.255.255.0</span><br><span class="line">cisco(config)# default-router 192.168.1.1</span><br><span class="line">cisco(config)# lease 3</span><br><span class="line">cisco(config)# exit</span><br></pre></td></tr></table></figure><h2 id="2-开启端口"><a href="#2-开启端口" class="headerlink" title="2. 开启端口"></a>2. 开启端口</h2><figure class="highlight plain"><figcaption><span>shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cisco(config)# interface f1</span><br><span class="line">cisco(config)# no shutdown</span><br><span class="line">cisco(config)# ip address 192.168.1.1 255.255.255.0</span><br></pre></td></tr></table></figure><p>这里的f1是设备的一个端口名称，可以用show run命令查看</p><figure class="highlight plain"><figcaption><span>shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show ip dhcp binding  # 显示地址分配情况</span><br><span class="line">shou ip dhcp conflict # 显示地址冲突情况</span><br><span class="line">clear ip dhcp binding 192.168.1.1 # 清理已经分配的ip</span><br></pre></td></tr></table></figure><h2 id="3-Dhcp-relay配置"><a href="#3-Dhcp-relay配置" class="headerlink" title="3. Dhcp relay配置"></a>3. Dhcp relay配置</h2><p>​    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;cisco_dhcp server配置&lt;/p&gt;
&lt;h2 id=&quot;1-Dhcp-server开启&quot;&gt;&lt;a href=&quot;#1-Dhcp-server开启&quot; class=&quot;headerlink&quot; title=&quot;1. Dhcp server开启&quot;&gt;&lt;/a&gt;1. Dhcp serve</summary>
      
    
    
    
    <category term="iot" scheme="https://whitepoet.com/categories/iot/"/>
    
    
    <category term="cisco" scheme="https://whitepoet.com/tags/cisco/"/>
    
    <category term="dhcp_configure" scheme="https://whitepoet.com/tags/dhcp-configure/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://whitepoet.com/hello-world/"/>
    <id>https://whitepoet.com/hello-world/</id>
    <published>2020-10-10T06:27:55.665Z</published>
    <updated>2020-10-10T07:56:23.837Z</updated>
    
    <content type="html"><![CDATA[<p>littlewhite,Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;littlewhite,Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documenta</summary>
      
    
    
    
    
  </entry>
  
</feed>
